ARM GAS  /tmp/cc8YW5qD.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32l1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB0:
   1:Core/Src/stm32l1xx_it.c **** /**
   2:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
   3:Core/Src/stm32l1xx_it.c ****   * @file    stm32l1xx_it.c
   4:Core/Src/stm32l1xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
   6:Core/Src/stm32l1xx_it.c ****   * @attention
   7:Core/Src/stm32l1xx_it.c ****   *
   8:Core/Src/stm32l1xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
   9:Core/Src/stm32l1xx_it.c ****   * All rights reserved.
  10:Core/Src/stm32l1xx_it.c ****   *
  11:Core/Src/stm32l1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Core/Src/stm32l1xx_it.c ****   * in the root directory of this software component.
  13:Core/Src/stm32l1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Core/Src/stm32l1xx_it.c ****   *
  15:Core/Src/stm32l1xx_it.c ****   ******************************************************************************
  16:Core/Src/stm32l1xx_it.c ****   */
  17:Core/Src/stm32l1xx_it.c **** #include "main.h"
  18:Core/Src/stm32l1xx_it.c **** #include "stm32l1xx_it.h"
  19:Core/Src/stm32l1xx_it.c **** #include <stdint.h>
  20:Core/Src/stm32l1xx_it.c **** 
  21:Core/Src/stm32l1xx_it.c **** volatile uint32_t SYSTICK_VAL = 0;
  22:Core/Src/stm32l1xx_it.c **** 
  23:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
  24:Core/Src/stm32l1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  25:Core/Src/stm32l1xx_it.c **** /******************************************************************************/
  26:Core/Src/stm32l1xx_it.c **** /**
  27:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  28:Core/Src/stm32l1xx_it.c ****   */
  29:Core/Src/stm32l1xx_it.c **** void NMI_Handler(void)
  30:Core/Src/stm32l1xx_it.c **** {
  27              		.loc 1 30 1 view -0
  28              		.cfi_startproc
ARM GAS  /tmp/cc8YW5qD.s 			page 2


  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  31:Core/Src/stm32l1xx_it.c ****   while (1)
  34              		.loc 1 31 3 discriminator 1 view .LVU1
  32:Core/Src/stm32l1xx_it.c ****   {
  33:Core/Src/stm32l1xx_it.c ****   }
  35              		.loc 1 33 3 discriminator 1 view .LVU2
  31:Core/Src/stm32l1xx_it.c ****   while (1)
  36              		.loc 1 31 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE0:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB1:
  34:Core/Src/stm32l1xx_it.c **** }
  35:Core/Src/stm32l1xx_it.c **** 
  36:Core/Src/stm32l1xx_it.c **** /**
  37:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  38:Core/Src/stm32l1xx_it.c ****   */
  39:Core/Src/stm32l1xx_it.c **** void HardFault_Handler(void)
  40:Core/Src/stm32l1xx_it.c **** {
  50              		.loc 1 40 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  41:Core/Src/stm32l1xx_it.c ****   while (1)
  57              		.loc 1 41 3 discriminator 1 view .LVU5
  42:Core/Src/stm32l1xx_it.c ****   {
  43:Core/Src/stm32l1xx_it.c ****   }
  58              		.loc 1 43 3 discriminator 1 view .LVU6
  41:Core/Src/stm32l1xx_it.c ****   while (1)
  59              		.loc 1 41 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE1:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
  72              	.LFB2:
  44:Core/Src/stm32l1xx_it.c **** }
  45:Core/Src/stm32l1xx_it.c **** 
ARM GAS  /tmp/cc8YW5qD.s 			page 3


  46:Core/Src/stm32l1xx_it.c **** /**
  47:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Memory management fault.
  48:Core/Src/stm32l1xx_it.c ****   */
  49:Core/Src/stm32l1xx_it.c **** void MemManage_Handler(void)
  50:Core/Src/stm32l1xx_it.c **** {
  73              		.loc 1 50 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
  51:Core/Src/stm32l1xx_it.c ****   while (1)
  80              		.loc 1 51 3 discriminator 1 view .LVU9
  52:Core/Src/stm32l1xx_it.c ****   {
  53:Core/Src/stm32l1xx_it.c ****   }
  81              		.loc 1 53 3 discriminator 1 view .LVU10
  51:Core/Src/stm32l1xx_it.c ****   while (1)
  82              		.loc 1 51 9 discriminator 1 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE2:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB3:
  54:Core/Src/stm32l1xx_it.c **** }
  55:Core/Src/stm32l1xx_it.c **** 
  56:Core/Src/stm32l1xx_it.c **** /**
  57:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
  58:Core/Src/stm32l1xx_it.c ****   */
  59:Core/Src/stm32l1xx_it.c **** void BusFault_Handler(void)
  60:Core/Src/stm32l1xx_it.c **** {
  96              		.loc 1 60 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
  61:Core/Src/stm32l1xx_it.c ****   while (1)
 103              		.loc 1 61 3 discriminator 1 view .LVU13
  62:Core/Src/stm32l1xx_it.c ****   {
  63:Core/Src/stm32l1xx_it.c ****   }
 104              		.loc 1 63 3 discriminator 1 view .LVU14
  61:Core/Src/stm32l1xx_it.c ****   while (1)
 105              		.loc 1 61 9 discriminator 1 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE3:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
ARM GAS  /tmp/cc8YW5qD.s 			page 4


 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB4:
  64:Core/Src/stm32l1xx_it.c **** }
  65:Core/Src/stm32l1xx_it.c **** 
  66:Core/Src/stm32l1xx_it.c **** /**
  67:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
  68:Core/Src/stm32l1xx_it.c ****   */
  69:Core/Src/stm32l1xx_it.c **** void UsageFault_Handler(void)
  70:Core/Src/stm32l1xx_it.c **** {
 119              		.loc 1 70 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
  71:Core/Src/stm32l1xx_it.c ****   while (1)
 126              		.loc 1 71 3 discriminator 1 view .LVU17
  72:Core/Src/stm32l1xx_it.c ****   {
  73:Core/Src/stm32l1xx_it.c ****   }
 127              		.loc 1 73 3 discriminator 1 view .LVU18
  71:Core/Src/stm32l1xx_it.c ****   while (1)
 128              		.loc 1 71 9 discriminator 1 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE4:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SVC_Handler:
 141              	.LFB5:
  74:Core/Src/stm32l1xx_it.c **** }
  75:Core/Src/stm32l1xx_it.c **** 
  76:Core/Src/stm32l1xx_it.c **** /**
  77:Core/Src/stm32l1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  78:Core/Src/stm32l1xx_it.c ****   */
  79:Core/Src/stm32l1xx_it.c **** void SVC_Handler(void)
  80:Core/Src/stm32l1xx_it.c **** {
 142              		.loc 1 80 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
  81:Core/Src/stm32l1xx_it.c **** }
 147              		.loc 1 81 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE5:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
ARM GAS  /tmp/cc8YW5qD.s 			page 5


 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	DebugMon_Handler:
 160              	.LFB6:
  82:Core/Src/stm32l1xx_it.c **** 
  83:Core/Src/stm32l1xx_it.c **** /**
  84:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Debug monitor.
  85:Core/Src/stm32l1xx_it.c ****   */
  86:Core/Src/stm32l1xx_it.c **** void DebugMon_Handler(void)
  87:Core/Src/stm32l1xx_it.c **** {
 161              		.loc 1 87 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
  88:Core/Src/stm32l1xx_it.c **** }
 166              		.loc 1 88 1 view .LVU23
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE6:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	PendSV_Handler:
 179              	.LFB7:
  89:Core/Src/stm32l1xx_it.c **** 
  90:Core/Src/stm32l1xx_it.c **** /**
  91:Core/Src/stm32l1xx_it.c ****   * @brief This function handles Pendable request for system service.
  92:Core/Src/stm32l1xx_it.c ****   */
  93:Core/Src/stm32l1xx_it.c **** void PendSV_Handler(void)
  94:Core/Src/stm32l1xx_it.c **** {
 180              		.loc 1 94 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
  95:Core/Src/stm32l1xx_it.c **** }
 185              		.loc 1 95 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE7:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	SysTick_Handler:
 198              	.LFB8:
  96:Core/Src/stm32l1xx_it.c **** 
  97:Core/Src/stm32l1xx_it.c **** /**
  98:Core/Src/stm32l1xx_it.c ****   * @brief This function handles System tick timer.
  99:Core/Src/stm32l1xx_it.c ****   */
ARM GAS  /tmp/cc8YW5qD.s 			page 6


 100:Core/Src/stm32l1xx_it.c **** void SysTick_Handler(void)
 101:Core/Src/stm32l1xx_it.c **** {
 199              		.loc 1 101 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 102:Core/Src/stm32l1xx_it.c ****   SYSTICK_VAL ++;
 204              		.loc 1 102 3 view .LVU27
 205              		.loc 1 102 15 is_stmt 0 view .LVU28
 206 0000 024A     		ldr	r2, .L15
 207 0002 1368     		ldr	r3, [r2]
 208 0004 0133     		adds	r3, r3, #1
 209 0006 1360     		str	r3, [r2]
 103:Core/Src/stm32l1xx_it.c **** }
 210              		.loc 1 103 1 view .LVU29
 211 0008 7047     		bx	lr
 212              	.L16:
 213 000a 00BF     		.align	2
 214              	.L15:
 215 000c 00000000 		.word	SYSTICK_VAL
 216              		.cfi_endproc
 217              	.LFE8:
 219              		.global	SYSTICK_VAL
 220              		.section	.bss.SYSTICK_VAL,"aw",%nobits
 221              		.align	2
 224              	SYSTICK_VAL:
 225 0000 00000000 		.space	4
 226              		.text
 227              	.Letext0:
 228              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 229              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 230              		.file 4 "Core/Inc/stm32l1xx_it.h"
ARM GAS  /tmp/cc8YW5qD.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_it.c
     /tmp/cc8YW5qD.s:19     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc8YW5qD.s:42     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:48     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc8YW5qD.s:65     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc8YW5qD.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:94     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc8YW5qD.s:111    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:117    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc8YW5qD.s:134    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:140    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc8YW5qD.s:153    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:159    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc8YW5qD.s:172    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:178    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc8YW5qD.s:191    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc8YW5qD.s:197    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc8YW5qD.s:215    .text.SysTick_Handler:000000000000000c $d
     /tmp/cc8YW5qD.s:224    .bss.SYSTICK_VAL:0000000000000000 SYSTICK_VAL
     /tmp/cc8YW5qD.s:221    .bss.SYSTICK_VAL:0000000000000000 $d

NO UNDEFINED SYMBOLS
